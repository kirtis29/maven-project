pipeline
{
agent any
stages
{
  stage ('scm checkout')
   {steps { git branch: 'master', url: 'https://github.com/prakashk0301/maven-project' }}

  stage ('execute unit test')
  {steps { withMaven(globalMavenSettingsConfig: 'e332679b-a71d-434c-b97c-5fe0f871e636', jdk: 'LocalJDK', maven: 'LocalMVN', mavenSettingsConfig: '26bc7296-0d78-4b33-904a-bed77e28a4ca', traceability: true) 
   { sh 'mvn test' } 
  }}

  stage ('code build')
  {steps { withMaven(globalMavenSettingsConfig: 'e332679b-a71d-434c-b97c-5fe0f871e636', jdk: 'LocalJDK', maven: 'LocalMVN', mavenSettingsConfig: '26bc7296-0d78-4b33-904a-bed77e28a4ca', traceability: true) 
   { sh 'mvn package' } 
  }}

  stage ('create docker image')
  {steps { sh 'docker build -t 335821453379.dkr.ecr.ap-south-1.amazonaws.com/my-ecr:latest .' }
  }

  stage('docker push from jenkins to AWS ECR')
  {steps{ withDockerRegistry(credentialsId: 'ecr:ap-south-1:aws-cred', url: 'https://335821453379.dkr.ecr.ap-south-1.amazonaws.com') 
     { sh 'docker push 335821453379.dkr.ecr.ap-south-1.amazonaws.com/my-ecr:latest' }   
 
 }}

stage('deploy to eks-kubernetes from jenkins')
{steps{ withAWS(credentials: 'aws-cred', region: 'ap-south-1') 
{ sh 'aws eks --region ap-south-1 update-kubeconfig --name my-eks-prod'
  sh 'kubectl apply -f eks-manifest.yaml' }}}   //helm install myapp .
}
}
